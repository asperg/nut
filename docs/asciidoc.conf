## NUT macros: linkman, linkman2, linkdoc, linksingledoc
#
# Usage: linkman:command[manpage-section]
#   This macro allows to handle variable manpage location, depending on the
#   document type
# Usage: linkman2:command-page[displayed-command,manpage-section]
#   Just like linkman macro, but supports different names for the page and the
#   command shown.
#
# Note:
# - in linkman, {0} is the manpage section, while {target} is the command.
# - in linkman2, {0} is the whole list of attributes, {1} is the command to be
#   shown, {2} is the manpage section, while {target} is the command page.
#
# Example:
#   linkman:ups.conf[5]
#   linkman2:ups_conf[ups.conf,5]
#
# Show NUT link as: <command>(<section>); if section is defined, else just show
#   the command.
#
################################################################################
#
# Usage: linkdoc:document[display title,[anchor]]
#   This macro allows to handle variable NUT documentation location, depending
#   on the document type
# Usage: linksingledoc:document[display title,[anchor]]
#   Just like linkdoc macro, but, when chunked HTML is generated, this one always
#   points to a non-chunked file
#
# Note, {1} is the display title, {2} is the optional anchor name,
#   {0} is the whole set of args ({1}...{n}) and {target} is the
#   base document name.
# Example:
#   linkdoc:user-manual[user manual,NUT_Security]
#   linkdoc:developer-guide[developer guide,_status_data]
#   linksingledoc:FAQ[shopping tips,_which_ups_should_i_buy]

[macros]
(?su)[\\]?(?P<name>linkman):(?P<target>\S*?)\[(?P<attrlist>.*?)\]=
(?su)[\\]?(?P<name>linkman2):(?P<target>\S*?)\[(?P<attrlist>.*?)\]=
(?su)[\\]?(?P<name>linkdoc):(?P<target>\S*?)\[(?P<attrlist>.*?)\]=
(?su)[\\]?(?P<name>linksingledoc):(?P<target>\S*?)\[(?P<attrlist>.*?)\]=

ifdef::basebackend-docbook[]
# AsciiDoc <= ~8.6.9 tests the wrong attribute and, as a consequence of that, it produces both <link> and <xref>.
# To workaround this issue, implement the xref macro by ourselves.
[xref-inlinemacro]
<link linkend="{target}">{0}</link>
{0%}<xref linkend="{target}"/>

ifdef::xhtml11_format[]
[linkman-inlinemacro]
<ulink url="man/{target}.html">{target}{0?({0})}</ulink>
[linkman2-inlinemacro]
<ulink url="man/{target}.html">{1={target}}{2?({2})}</ulink>
[linkdoc-inlinemacro]
<ulink url="{target}.html{2?#{2}}">{1}</ulink>
[linksingledoc-inlinemacro]
<ulink url="{target}.html{2?#{2}}">{1}</ulink>
endif::xhtml11_format[]

# FIXME: linkdoc does not support 'anchor'
ifdef::chunked_format[]
[linkman-inlinemacro]
<ulink url="../man/{target}.html">{target}{0?({0})}</ulink>
[linkman2-inlinemacro]
<ulink url="../man/{target}.html">{1={target}}{2?({2})}</ulink>
[linkdoc-inlinemacro]
<ulink url="../{target}.chunked/index.html">{1}</ulink>
[linksingledoc-inlinemacro]
<ulink url="../{target}.html{2?#{2}}">{1}</ulink>
endif::chunked_format[]

# PDF output points online versions
# FIXME: linkdoc and linksingledoc don't support 'anchor'
ifdef::pdf_format[]
[linkman-inlinemacro]
<ulink url="https://www.networkupstools.org/docs/man/{target}.html">{target}{0?({0})}</ulink>
[linkman2-inlinemacro]
<ulink url="https://www.networkupstools.org/docs/man/{target}.html">{1={target}}{2?({2})}</ulink>
[linkdoc-inlinemacro]
<ulink url="{target}.pdf">{1}</ulink>
[linksingledoc-inlinemacro]
<ulink url="{target}.pdf">{1}</ulink>
endif::pdf_format[]
endif::basebackend-docbook[]
